README for Namespace NUOPC prototype
------------------------------------

Show how a mediator component leverages the namespace feature to interact with
two instances of the exact same model component.

Description:

  A two-way coupled system with a single driver, a mediator component, and
  two instances of the same model component.

  The driver component uses the default run sequence to implement coupling
  between the two model instances through the mediator.
  
  The connector components are explicitly added by the driver.
  
  Both model components and the mediator component use a simple two-phase
  initialization, consisting of advertise and realize.
  
  The mediator component uses namespaces when advertising its import and 
  export fields.
  

Build:
  - Set environment variable ESMFMKFILE to point to the esmf.mk of your ESMF
    installation.
  - gmake
  
Execution:
  - Optionally set environment variable ESMF_RUNTIME_COMPLIANCECHECK to ON.
  - mpirun -np X ./mainApp (where X is the total number of PETs, typically 4)
  
Output:
  - PET*.Log files containing compliance checker output if turned on.
  - The prototype outputs time stepping information to stdout.

Code structure:
  - Makefile    - Makefile that is based on the standard esmf.mk mechanism.
  - atm.F90     - The ATM component, specializing generic NUOPC_Model.
  - med.F90     - The Mediator specializing NUOPC_Mediator, expecting 2 ATMs
  - driver.F90  - Driver specializing NUOPC_Driver, driving 2 ATMs and 1 MED
                  instance.
  - mainApp.F90 - Main application.
