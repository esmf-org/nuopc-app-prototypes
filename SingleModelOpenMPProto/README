README for single Model OpenMP NUOPC prototype
----------------------------------------------

Very simple NUOPC app with a Driver controlling a single Model component. The
model component uses OpenMP if compiled with support.

Description:

  A single model component driven by a single driver component.
  
  Thhe model component provides a SetVM() method that is called back by the 
  Driver during the NUOPC_DriverAddComp() call.
  
  In the SetVM() routine the model component requests to have its VM configured
  so that each PET has access to 2 PEs (i.e. CPU cores).
  
  If compiled with OpenMP support, the model component will use the 2 PEs per
  PET to utilize OpenMP threading.

  The ESM driver component uses the default run sequence to drive the MODEL
  component.
  
  No connector components are present.
  
  The MODEL component uses a simple two-phase initialization,
  consisting of advertise and realize.
  

Build:
  - Set environment variable ESMFMKFILE to point to the esmf.mk of your ESMF
    installation.
  - gmake
  
Execution:
  - Optionally set environment variable ESMF_RUNTIME_COMPLIANCECHECK to ON.
  - mpirun -np X ./esmApp (where X is the total number of PETs, typically 4)
  
Output:
  - PET*.Log files containing compliance checker output if turned on.
  - The prototype outputs time stepping information to stdout.

Code structure:
  - Makefile    - Makefile that is based on the standard esmf.mk mechanism.
  - model.F90   - The MODEL component, specializing generic NUOPC_Model.
  - driver.F90  - Driver specializing NUOPC_Driver, driving the single MODEL.
  - mainApp.F90 - Main application.
