README for Nesting NUOPC prototype with multiple (two) nestlings
----------------------------------------------------------------

Show how a driver component uses the "NestingGeneration" and "Nestling" 
attributes to drive two nest instances within a parent domain. All three 
domains are instances of the same model component.

Description:

  A one-way coupled system with a single driver, and three instances of the
  same model component. One instance for the parent domain, and two nestlings
  within that same parent domain,

  The driver component uses the default run sequence to implement coupling
  between the parent domain, and both nestlings.
  
  The connector components from parent domain to nest domains are explicitly
  added by the driver.
  
  The model component uses a simple two-phase initialization, consisting of
  advertise and realize.
  

Build:
  - Set environment variable ESMFMKFILE to point to the esmf.mk of your ESMF
    installation.
  - gmake
  
Execution:
  - Optionally set environment variable ESMF_RUNTIME_COMPLIANCECHECK to ON.
  - mpirun -np X ./mainApp (where X is the total number of PETs, typically 4)
  
Output:
  - PET*.Log files containing compliance checker output if turned on.
  - The prototype outputs time stepping information to stdout.

Code structure:
  - Makefile            - Makefile that is based on the standard esmf.mk 
                          mechanism.
  - advectDiffComp.F90  - Advection-Diffusion model that is nested, 
                          specializing the generic NUOPC_Model.
  - driverComp.F90      - Driver component that sets up nesting, 
                          specializing generic the generic NUOPC_Driver.
  - mainApp.F90         - Main application.
