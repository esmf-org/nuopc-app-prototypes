README for Nesting NUOPC prototype with telescoping and multiple nestlings
--------------------------------------------------------------------------

Show how a driver component uses the "NestingGeneration" and "Nestling" 
attributes to drive two nest instances within a parent domain, and then
nests another instance into one of the nest domains. All four domains are
instances of the same model component.

Description:

  A one-way coupled system with a single driver, and four instances of the
  same model component. One instance for the parent domain, two nestlings
  of generation 1 within that same parent domain. One nestling of generation 2
  within one of the nests of generation 1.

  The driver component constructs a custom run sequence to implement coupling
  between the nested domains.
  
  The connector components from parent domain to nest domains are explicitly
  added by the driver.
  
  The model component uses a simple two-phase initialization, consisting of
  advertise and realize.
  

Build:
  - Set environment variable ESMFMKFILE to point to the esmf.mk of your ESMF
    installation.
  - gmake
  
Execution:
  - Optionally set environment variable ESMF_RUNTIME_COMPLIANCECHECK to ON.
  - mpirun -np X ./mainApp (where X is the total number of PETs, typically 4)
  
Output:
  - PET*.Log files containing compliance checker output if turned on.
  - The prototype outputs time stepping information to stdout.

Code structure:
  - Makefile            - Makefile that is based on the standard esmf.mk 
                          mechanism.
  - advectDiffComp.F90  - Advection-Diffusion model that is nested, 
                          specializing the generic NUOPC_Model.
  - driverComp.F90      - Driver component that sets up nesting, 
                          specializing generic the generic NUOPC_Driver.
  - mainApp.F90         - Main application.
